from aiogram import types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup
import json
btn = types.KeyboardButton
inBtn = types.InlineKeyboardButton
#------ Main -------#
def mainBtn():
    buttons = [
            [
            btn(text = "‚≠êÔ∏è–í—Å–µ –°–∫—Ä–∏–ø—Ç—ã‚≠êÔ∏è"),
            btn(text = "üëä –ü—Ä–æ—Ñ–∏–ª—å")
            ],
            [btn(text = "üî• –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∫—Ä–µ–æ—Å–æ–≤ üî•") ],
            [
            btn(text="–û –°–µ—Ä–≤–∏—Å–µ ‚ù§Ô∏è")
            ]
            ]
        
    main_mark = types.ReplyKeyboardMarkup(keyboard=buttons)
    return main_mark

def Profile():
    buttons = [
        # [btn(text = "üòé–ö—É–ø–ª–µ–Ω–Ω–æ–µüòé"),btn(text = "ü§ù–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç")],
        [btn(text = "–ù–∞ –≥–ª–∞–≤–Ω—É—é –±—Ä–∞—Ç–∏—à–∫–∞")]
    ]
    main_mark = types.ReplyKeyboardMarkup(keyboard=buttons)
    return main_mark

def Rules():
    buttons = [
        [inBtn(text = "üéá –Ø –∫—Ä–∞—Å–∞–≤–∞ –∏ —è –≤—Å–µ –ø—Ä–æ—á–∏—Ç–∞–ª, –¥–∞–≤–∞–π—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å üéá", callback_data="Rule")]
    ]
    rulesMark = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return rulesMark

def About():
    buttons = [
        [inBtn(text = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ", callback_data="About_Me")],
        [inBtn(text = "–ß—Ç–æ —Ç–∞–∫–æ–µ iCreo Health?", callback_data="About_Ecosystem")]
    ]
    rulesMark = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return rulesMark

def Scripts():
    buttons = [
        [inBtn(text = "–†–∞–∑—Ä–µ–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", callback_data="ImageDivider")]
    ]
    rulesMark = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return rulesMark

def ExitFromImageMatrix():
    buttons = [
        [inBtn(text = "–í—ã–π—Ç–∏ –∏–∑ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞", callback_data="AgreeWindow_Exit")]
    ]
    rulesMark = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return rulesMark

def Accept():
    buttons = [
        [inBtn(text = "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é", callback_data="AgreeWindow_Yes")],
        [inBtn(text = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="AgreeWindow_No")],
        [inBtn(text = "–í—ã–π—Ç–∏ –∏–∑ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞", callback_data="AgreeWindow_Exit")],
        [inBtn(text = "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å –∑–∞–≤–æ–¥—Å–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏", callback_data="AgreeWindow_Rejoin")]
    ]
    rulesMark = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return rulesMark
def Accept2():
    buttons = [
        [inBtn(text = "–ó–∞–ø—É—Å–∫ —Å –∑–∞–≤–æ–¥—Å–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏", callback_data="AgreeWindow_Rejoin")]
    ]
    rulesMark = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return rulesMark
#------ Goods -------#
def AllGoodsBtn():
    GoodsBtn = [[inBtn(text= "–•–æ—á—É –ê–Ω–∏–º–∞—Ü–∏–∏ —ç–∫—Å–ª—é–∑–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞", url= "https://t.me/DeFaustus", callback_data="goods_exlusive")]]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=GoodsBtn)
    return keyboard





